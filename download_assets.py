import os
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin, urlparse

# --- C·∫•u h√¨nh ---
LIVE_URL = 'https://gobranding.com.vn/' # URL c·ªßa trang web c·∫ßn l·∫•y d·ªØ li·ªáu
HTML_OUTPUT_FILE = 'templates/index.html' # N∆°i l∆∞u file HTML s·∫°ch
STATIC_FOLDER = 'static'
IMAGE_FOLDER = os.path.join(STATIC_FOLDER, 'images')
VALID_EXTENSIONS = ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp']

# --- B∆∞·ªõc 1: T·∫°o c√°c th∆∞ m·ª•c c·∫ßn thi·∫øt ---
os.makedirs(os.path.dirname(HTML_OUTPUT_FILE), exist_ok=True)
os.makedirs(IMAGE_FOLDER, exist_ok=True)
print(f"C√°c th∆∞ m·ª•c '{os.path.dirname(HTML_OUTPUT_FILE)}' v√† '{IMAGE_FOLDER}' ƒë√£ s·∫µn s√†ng.")

def download_asset(asset_url):
    """T·∫£i m·ªôt t√†i s·∫£n (·∫£nh) t·ª´ URL v√† tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n c·ª•c b·ªô m·ªõi."""
    # ƒê·∫£m b·∫£o URL l√† ƒë·∫ßy ƒë·ªß (v√≠ d·ª•: bi·∫øn /wp-content/... th√†nh https://...)
    full_url = urljoin(LIVE_URL, asset_url)
    
    try:
        path = urlparse(full_url).path
        filename = os.path.basename(path)

        # Ki·ªÉm tra ƒëu√¥i file h·ª£p l·ªá
        if not any(path.lower().endswith(ext) for ext in VALID_EXTENSIONS):
            print(f"‚ö†Ô∏è  B·ªè qua: '{asset_url}' (Kh√¥ng ph·∫£i file ·∫£nh h·ª£p l·ªá)")
            return None

        # T·∫£i file
        response = requests.get(full_url, timeout=15)
        response.raise_for_status()

        save_path = os.path.join(IMAGE_FOLDER, filename)
        with open(save_path, 'wb') as f:
            f.write(response.content)
        
        print(f"‚úÖ T·∫£i th√†nh c√¥ng: {filename}")
        
        # Tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n m·ªõi ƒë·ªÉ s·ª≠ d·ª•ng trong file HTML
        return f"/{STATIC_FOLDER}/images/{filename}"

    except requests.exceptions.RequestException as e:
        print(f"‚ùå L·ªói khi t·∫£i {full_url}: {e}")
        return None

# --- B∆∞·ªõc 2: L·∫•y n·ªôi dung HTML tr·ª±c ti·∫øp t·ª´ trang web ---
print(f"\nƒêang t·∫£i n·ªôi dung t·ª´ {LIVE_URL}...")
try:
    response = requests.get(LIVE_URL)
    response.raise_for_status()
    soup = BeautifulSoup(response.text, 'html.parser')
    print("T·∫£i n·ªôi dung HTML th√†nh c√¥ng!")
except requests.exceptions.RequestException as e:
    print(f"Kh√¥ng th·ªÉ t·∫£i trang web. L·ªói: {e}")
    exit() # Tho√°t ch∆∞∆°ng tr√¨nh n·∫øu kh√¥ng l·∫•y ƒë∆∞·ª£c HTML

# --- B∆∞·ªõc 3: T√¨m, t·∫£i v√† c·∫≠p nh·∫≠t ƒë∆∞·ªùng d·∫´n ·∫£nh ---
print("\nB·∫Øt ƒë·∫ßu qu√©t v√† t·∫£i h√¨nh ·∫£nh...")
for img_tag in soup.find_all('img'):
    # ∆Øu ti√™n l·∫•y 'data-src' ho·∫∑c 'data-lazy-src' cho c√°c ·∫£nh t·∫£i tr·ªÖ
    original_src = img_tag.get('data-src') or img_tag.get('src')
    
    if original_src:
        new_src = download_asset(original_src)
        if new_src:
            img_tag['src'] = new_src # C·∫≠p nh·∫≠t l·∫°i ƒë∆∞·ªùng d·∫´n
            # X√≥a c√°c thu·ªôc t√≠nh t·∫£i tr·ªÖ kh√¥ng c·∫ßn thi·∫øt n·ªØa
            if 'data-src' in img_tag.attrs:
                del img_tag['data-src']
            if 'srcset' in img_tag.attrs:
                del img_tag['srcset']

# --- B∆∞·ªõc 4: L∆∞u l·∫°i file HTML ho√†n ch·ªânh ---
print(f"\nƒêang l∆∞u file HTML ƒë√£ x·ª≠ l√Ω v√†o '{HTML_OUTPUT_FILE}'...")
with open(HTML_OUTPUT_FILE, 'w', encoding='utf-8') as f:
    # D√πng prettify() ƒë·ªÉ file HTML m·ªõi c√≥ c·∫•u tr√∫c ƒë·∫πp, d·ªÖ ƒë·ªçc
    f.write(str(soup.prettify()))

print("\nüéâüéâüéâ Ho√†n t·∫•t! M·ªçi th·ª© ƒë√£ s·∫µn s√†ng cho Giai ƒëo·∫°n 2 (ch·∫°y v·ªõi Flask).")